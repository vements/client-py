name: Build and Test

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Test Image
        run: docker build -t client-py:latest -f ./dockerfile.test .

      - name: Run Test Image
        run: docker run --rm client-py:latest

      - name: Set up Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user

      - name: Python Build
        run: python3 -m build

      - name: Save Distribution Packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    runs-on: ubuntu-latest
    name: Publish Python 🐍 Distribution 📦 to PyPI
    needs:
    - test-and-build
    environment:
      name: pypi
      url: https://pypi.org/p/vements
    permissions:
      id-token: write

    steps:
    - name: Download Distribution
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish Distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    runs-on: ubuntu-latest
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download Distribution
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Sign the Distribution with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""

    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'


  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{github.workflow}}

            repository: ${{ github.repository }}

            user: ${{ github.actor }}

            commit: ${{ github.event.head_commit.message }}

            link: https://github.com/${{ github.repository }}

            link: https://github.com/${{ github.repository }}/commit/${{github.sha}}
